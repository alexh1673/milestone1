{"ast":null,"code":"/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map();\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create();\n  m.forEach((v, k) => {\n    r.set(k, v);\n  });\n  return r;\n};\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key);\n  if (set === undefined) {\n    map.set(key, set = createT());\n  }\n  return set;\n};\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = [];\n  for (const [key, value] of m) {\n    res.push(f(value, key));\n  }\n  return res;\n};\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false;\n    }\n  }\n  return true;\n};","map":{"version":3,"names":["create","Map","copy","m","r","forEach","v","k","set","setIfUndefined","map","key","createT","get","undefined","f","res","value","push","any","all"],"sources":["/root/ms1/my-app/node_modules/lib0/map.js"],"sourcesContent":["/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,MAAM,GAAG,MAAM,IAAIC,GAAG,EAAE;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGC,CAAC,IAAI;EACvB,MAAMC,CAAC,GAAGJ,MAAM,EAAE;EAClBG,CAAC,CAACE,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAAEH,CAAC,CAACI,GAAG,CAACD,CAAC,EAAED,CAAC,CAAC;EAAC,CAAC,CAAC;EACpC,OAAOF,CAAC;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,cAAc,GAAG,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,KAAK;EACnD,IAAIJ,GAAG,GAAGE,GAAG,CAACG,GAAG,CAACF,GAAG,CAAC;EACtB,IAAIH,GAAG,KAAKM,SAAS,EAAE;IACrBJ,GAAG,CAACF,GAAG,CAACG,GAAG,EAAEH,GAAG,GAAGI,OAAO,EAAE,CAAC;EAC/B;EACA,OAAOJ,GAAG;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,GAAG,GAAG,CAACP,CAAC,EAAEY,CAAC,KAAK;EAC3B,MAAMC,GAAG,GAAG,EAAE;EACd,KAAK,MAAM,CAACL,GAAG,EAAEM,KAAK,CAAC,IAAId,CAAC,EAAE;IAC5Ba,GAAG,CAACE,IAAI,CAACH,CAAC,CAACE,KAAK,EAAEN,GAAG,CAAC,CAAC;EACzB;EACA,OAAOK,GAAG;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,GAAG,GAAG,CAAChB,CAAC,EAAEY,CAAC,KAAK;EAC3B,KAAK,MAAM,CAACJ,GAAG,EAAEM,KAAK,CAAC,IAAId,CAAC,EAAE;IAC5B,IAAIY,CAAC,CAACE,KAAK,EAAEN,GAAG,CAAC,EAAE;MACjB,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,GAAG,GAAG,CAACjB,CAAC,EAAEY,CAAC,KAAK;EAC3B,KAAK,MAAM,CAACJ,GAAG,EAAEM,KAAK,CAAC,IAAId,CAAC,EAAE;IAC5B,IAAI,CAACY,CAAC,CAACE,KAAK,EAAEN,GAAG,CAAC,EAAE;MAClB,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module"}