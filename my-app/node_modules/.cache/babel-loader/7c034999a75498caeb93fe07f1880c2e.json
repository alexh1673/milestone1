{"ast":null,"code":"var _jsxFileName = \"/root/ms1/my-app/src/Editor.js\",\n  _s = $RefreshSig$();\nimport * as Y from 'yjs';\nimport { QuillBinding } from 'y-quill';\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors';\nimport { useCallback } from 'react';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Editor(props) {\n  _s();\n  console.log('In editor');\n\n  //eventsource stuff in here\n  const events = new EventSource(`http://194.113.75.203:3001/api/connect/${props.docId}`);\n  console.log(events);\n  events.addEventListener('sync', e => {\n    console.log('listening to sync');\n  });\n  events.onmessage = event => {\n    console.log(\"one event\");\n    console.log(event.type);\n    if (event.type === 'sync') {\n      console.log(\"in sync\");\n      //add data to y doc\n    } else if (event.type === 'update') {\n      //update y doc\n    }\n    console.log(\"inside one event\");\n    console.log(event.data); //<- our data from the backend is here\n    //now gotta figure out how to tell the typee of event (sync or update)\n    //if sync add data to y doc obj\n    //if update update crdt obj (which in this case would b y doc)\n  };\n\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    Quill.register('modules/cursors', QuillCursors);\n    const quill = new Quill(document.querySelector('#editor'), {\n      modules: {\n        cursors: true,\n        toolbar: [[{\n          header: [1, 2, false]\n        }], ['bold', 'italic', 'underline'], ['image', 'code-block']],\n        history: {\n          userOnly: true\n        }\n      },\n      placeholder: 'Start collaborating...',\n      theme: 'snow'\n    });\n    // A Yjs document holds the shared data\n    const ydoc = new Y.Doc();\n    // Define a shared text type on the document\n    const ytext = ydoc.getText('quill');\n\n    // Create an editor-binding which\n    // \"binds\" the quill editor to a Y.Text type.\n    const binding = new QuillBinding(ytext, quill);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n}\n_s(Editor, \"Ckff4P1tSXuKx/UN+CqhszMFSy0=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["Y","QuillBinding","Quill","QuillCursors","useCallback","Editor","props","console","log","events","EventSource","docId","addEventListener","e","onmessage","event","type","data","wrapperRef","wrapper","innerHTML","register","quill","document","querySelector","modules","cursors","toolbar","header","history","userOnly","placeholder","theme","ydoc","Doc","ytext","getText","binding"],"sources":["/root/ms1/my-app/src/Editor.js"],"sourcesContent":["import * as Y from 'yjs'\nimport { QuillBinding } from 'y-quill'\nimport Quill from 'quill'\nimport QuillCursors from 'quill-cursors'\nimport { useCallback } from 'react'\nimport \"./styles.css\"\n\nfunction Editor(props) {\n    console.log('In editor')\n    \n    \n    //eventsource stuff in here\n    const events = new EventSource(`http://194.113.75.203:3001/api/connect/${props.docId}`)\n    console.log(events)\n\n    events.addEventListener('sync', (e) => {\n        console.log('listening to sync')\n      });\n\n    events.onmessage = (event) => {\n        console.log(\"one event\")\n        console.log(event.type)\n        if (event.type === 'sync') {\n            console.log(\"in sync\");\n            //add data to y doc\n        } else if (event.type === 'update') {\n            //update y doc\n        }\n        console.log(\"inside one event\")\n        console.log(event.data); //<- our data from the backend is here\n        //now gotta figure out how to tell the typee of event (sync or update)\n        //if sync add data to y doc obj\n        //if update update crdt obj (which in this case would b y doc)\n\n    };\n\n\n    const wrapperRef = useCallback((wrapper) => {\n        if (wrapper == null) return\n        wrapper.innerHTML = \"\"\n        Quill.register('modules/cursors', QuillCursors)\n        const quill = new Quill(document.querySelector('#editor'), {\n            modules: {\n                cursors: true,\n                toolbar: [\n                    [{ header: [1, 2, false] }],\n                    ['bold', 'italic', 'underline'],\n                    ['image', 'code-block']\n                ],\n                history: {\n                    userOnly: true\n                }\n            },\n            placeholder: 'Start collaborating...',\n            theme: 'snow'\n        })\n        // A Yjs document holds the shared data\n        const ydoc = new Y.Doc()\n        // Define a shared text type on the document\n        const ytext = ydoc.getText('quill')\n\n        // Create an editor-binding which\n        // \"binds\" the quill editor to a Y.Text type.\n        const binding = new QuillBinding(ytext, quill)\n    }, [])\n\n    return <div id='editor' className='container' ref={wrapperRef}></div>\n}\n\nexport default Editor;"],"mappings":";;AAAA,OAAO,KAAKA,CAAC,MAAM,KAAK;AACxB,SAASC,YAAY,QAAQ,SAAS;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,eAAe;AACxC,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAO,cAAc;AAAA;AAErB,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EACnBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;EAGxB;EACA,MAAMC,MAAM,GAAG,IAAIC,WAAW,CAAE,0CAAyCJ,KAAK,CAACK,KAAM,EAAC,CAAC;EACvFJ,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EAEnBA,MAAM,CAACG,gBAAgB,CAAC,MAAM,EAAGC,CAAC,IAAK;IACnCN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC,CAAC;EAEJC,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;IAC1BR,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACO,KAAK,CAACC,IAAI,CAAC;IACvB,IAAID,KAAK,CAACC,IAAI,KAAK,MAAM,EAAE;MACvBT,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB;IACJ,CAAC,MAAM,IAAIO,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;MAChC;IACJ;IACAT,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BD,OAAO,CAACC,GAAG,CAACO,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC;IACzB;IACA;IACA;EAEJ,CAAC;;EAGD,MAAMC,UAAU,GAAGd,WAAW,CAAEe,OAAO,IAAK;IACxC,IAAIA,OAAO,IAAI,IAAI,EAAE;IACrBA,OAAO,CAACC,SAAS,GAAG,EAAE;IACtBlB,KAAK,CAACmB,QAAQ,CAAC,iBAAiB,EAAElB,YAAY,CAAC;IAC/C,MAAMmB,KAAK,GAAG,IAAIpB,KAAK,CAACqB,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC,EAAE;MACvDC,OAAO,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,CACL,CAAC;UAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK;QAAE,CAAC,CAAC,EAC3B,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,CAAC,EAC/B,CAAC,OAAO,EAAE,YAAY,CAAC,CAC1B;QACDC,OAAO,EAAE;UACLC,QAAQ,EAAE;QACd;MACJ,CAAC;MACDC,WAAW,EAAE,wBAAwB;MACrCC,KAAK,EAAE;IACX,CAAC,CAAC;IACF;IACA,MAAMC,IAAI,GAAG,IAAIjC,CAAC,CAACkC,GAAG,EAAE;IACxB;IACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,OAAO,CAAC,OAAO,CAAC;;IAEnC;IACA;IACA,MAAMC,OAAO,GAAG,IAAIpC,YAAY,CAACkC,KAAK,EAAEb,KAAK,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAK,EAAE,EAAC,QAAQ;IAAC,SAAS,EAAC,WAAW;IAAC,GAAG,EAAEJ;EAAW;IAAA;IAAA;IAAA;EAAA,QAAO;AACzE;AAAC,GA5DQb,MAAM;AAAA,KAANA,MAAM;AA8Df,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}