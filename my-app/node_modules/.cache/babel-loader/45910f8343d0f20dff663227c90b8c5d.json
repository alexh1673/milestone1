{"ast":null,"code":"/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js';\nimport * as binary from './binary.js';\nimport { cryptoRandomBuffer } from './isomorphic.js';\nexport const rand = Math.random;\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0];\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8));\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0);\n};\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)];\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */c => (c ^ uint32() & 15 >> c / 4).toString(16));","map":{"version":3,"names":["math","binary","cryptoRandomBuffer","rand","Math","random","uint32","Uint32Array","uint53","arr","BITS21","BITS32","oneOf","floor","length","uuidv4Template","uuidv4","replace","c","toString"],"sources":["/root/ms1/my-app/node_modules/lib0/random.js"],"sourcesContent":["\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,IAAI,MAAM,WAAW;AACjC,OAAO,KAAKC,MAAM,MAAM,aAAa;AACrC,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,OAAO,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM;AAE/B,OAAO,MAAMC,MAAM,GAAG,MAAM,IAAIC,WAAW,CAACL,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAErE,OAAO,MAAMM,MAAM,GAAG,MAAM;EAC1B,MAAMC,GAAG,GAAG,IAAIF,WAAW,CAACL,kBAAkB,CAAC,CAAC,CAAC,CAAC;EAClD,OAAO,CAACO,GAAG,CAAC,CAAC,CAAC,GAAGR,MAAM,CAACS,MAAM,KAAKT,MAAM,CAACU,MAAM,GAAG,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACxE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,KAAK,GAAGH,GAAG,IAAIA,GAAG,CAACT,IAAI,CAACa,KAAK,CAACV,IAAI,EAAE,GAAGM,GAAG,CAACK,MAAM,CAAC,CAAC;;AAEhE;AACA,MAAMC,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI;AACzD,OAAO,MAAMC,MAAM,GAAG,MAAMD,cAAc,CAACE,OAAO,CAAC,QAAQ,EAAE,wBAAyBC,CAAC,IACrF,CAACA,CAAC,GAAGZ,MAAM,EAAE,GAAG,EAAE,IAAIY,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAC1C"},"metadata":{},"sourceType":"module"}