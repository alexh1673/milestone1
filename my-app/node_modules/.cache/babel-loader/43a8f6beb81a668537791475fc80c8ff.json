{"ast":null,"code":"var _jsxFileName = \"/root/ms1/my-app/src/Home.js\";\nimport React, { useState } from \"react\";\nimport Editor from \"./Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = props => {\n  // const [editing, setEditing] = useState(false);\n  // const [text, setText] = useState(\"\");\n\n  // const handleUpdate = (event) => {\n  //     setText(event.target.value);\n  // }\n  // const handleSubmit = () => {\n  //     //EventSource stuff <- what we want \n  //     //ok the thin <- u little shit\n  //     const events = new EventSource(`http://194.113.75.203:3001/connect/${text}`)\n  //or we can just do addEventListener\n  //     events.onmessage = (event) => {\n  //if(event.type === 'sync'){\n  //add data to y doc\n  //}else if(event.type === 'update){\n  //update y doc\n  //}\n  //         console.log(event.data); //<- our data from the backend is here\n  //         //now gotta figure out how to tell the typee of event (sync or update)\n  //         //if sync add data to y doc obj\n  //         //if update update crdt obj (which in this case would b y doc)\n\n  //     };\n  //     //fetch(`http://194.113.75.203:3001/connect/${text}`) //fetch isn't what we want here using this as a placeholder\n  //     setEditing(true);\n  // }\n\n  // return (\n  //     <div>\n  //         {editing ? <Editor /> : (<React.Component>\n  //             <input onChange={handleUpdate} type=\"text\" placeholder=\"Enter doc id\" name=\"id\" id=\"id\" required></input>\n  //         <button onSubmit={handleSubmit} type=\"submit\">Open</button> </React.Component>)}\n  //     </div>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter doc id\",\n        name: \"id\",\n        id: \"id\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onSubmit: props.callback(),\n        type: \"submit\",\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Editor","Home","props","callback"],"sources":["/root/ms1/my-app/src/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Editor from \"./Editor\"\n\nconst Home = props => {\n    // const [editing, setEditing] = useState(false);\n    // const [text, setText] = useState(\"\");\n\n    // const handleUpdate = (event) => {\n    //     setText(event.target.value);\n    // }\n    // const handleSubmit = () => {\n    //     //EventSource stuff <- what we want \n    //     //ok the thin <- u little shit\n    //     const events = new EventSource(`http://194.113.75.203:3001/connect/${text}`)\n            //or we can just do addEventListener\n    //     events.onmessage = (event) => {\n               //if(event.type === 'sync'){\n                    //add data to y doc\n               //}else if(event.type === 'update){\n                    //update y doc\n               //}\n    //         console.log(event.data); //<- our data from the backend is here\n    //         //now gotta figure out how to tell the typee of event (sync or update)\n    //         //if sync add data to y doc obj\n    //         //if update update crdt obj (which in this case would b y doc)\n               \n    //     };\n    //     //fetch(`http://194.113.75.203:3001/connect/${text}`) //fetch isn't what we want here using this as a placeholder\n    //     setEditing(true);\n    // }\n\n    // return (\n    //     <div>\n    //         {editing ? <Editor /> : (<React.Component>\n    //             <input onChange={handleUpdate} type=\"text\" placeholder=\"Enter doc id\" name=\"id\" id=\"id\" required></input>\n    //         <button onSubmit={handleSubmit} type=\"submit\">Open</button> </React.Component>)}\n    //     </div>\n    // )\n\n    return (\n        <div>\n            <form>\n                <input type=\"text\" placeholder=\"Enter doc id\" name=\"id\" id=\"id\" required></input>\n                <button onSubmit={props.callback()} type=\"submit\">Open</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAA;AAE7B,MAAMC,IAAI,GAAGC,KAAK,IAAI;EAClB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACQ;EACR;EACW;EACK;EACL;EACK;EACL;EACX;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,uBACI;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,cAAc;QAAC,IAAI,EAAC,IAAI;QAAC,EAAE,EAAC,IAAI;QAAC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS,eACjF;QAAQ,QAAQ,EAAEA,KAAK,CAACC,QAAQ,EAAG;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA;EAC5D;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,KA5CKF,IAAI;AA8CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}