{"ast":null,"code":"/**\n * @module bindings/quill\n */\n\nimport * as Y from 'yjs'; // eslint-disable-line\nimport { Awareness } from 'y-protocols/awareness.js'; // eslint-disable-line\n\n/**\n * Removes the pending '\\n's if it has no attributes.\n */\nexport const normQuillDelta = delta => {\n  if (delta.length > 0) {\n    const d = delta[delta.length - 1];\n    const insert = d.insert;\n    if (d.attributes === undefined && insert !== undefined && insert.slice(-1) === '\\n') {\n      delta = delta.slice();\n      let ins = insert.slice(0, -1);\n      while (ins.slice(-1) === '\\n') {\n        ins = ins.slice(0, -1);\n      }\n      delta[delta.length - 1] = {\n        insert: ins\n      };\n      if (ins.length === 0) {\n        delta.pop();\n      }\n      return delta;\n    }\n  }\n  return delta;\n};\n\n/**\n * @param {any} quillCursors\n */\nconst updateCursor = (quillCursors, aw, clientId, doc, type) => {\n  try {\n    if (aw && aw.cursor && clientId !== doc.clientID) {\n      const user = aw.user || {};\n      const color = user.color || '#ffa500';\n      const name = user.name || `User: ${clientId}`;\n      quillCursors.createCursor(clientId.toString(), name, color);\n      const anchor = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(aw.cursor.anchor), doc);\n      const head = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(aw.cursor.head), doc);\n      if (anchor && head && anchor.type === type) {\n        quillCursors.moveCursor(clientId.toString(), {\n          index: anchor.index,\n          length: head.index - anchor.index\n        });\n      }\n    } else {\n      quillCursors.removeCursor(clientId.toString());\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport class QuillBinding {\n  /**\n   * @param {Y.Text} type\n   * @param {any} quill\n   * @param {Awareness} [awareness]\n   */\n  constructor(type, quill, awareness) {\n    const doc = /** @type {Y.Doc} */type.doc;\n    this.type = type;\n    this.doc = doc;\n    this.quill = quill;\n    const quillCursors = quill.getModule('cursors') || null;\n    this.quillCursors = quillCursors;\n    // This object contains all attributes used in the quill instance\n    this._negatedUsedFormats = {};\n    this.awareness = awareness;\n    this._awarenessChange = _ref => {\n      let {\n        added,\n        removed,\n        updated\n      } = _ref;\n      const states = /** @type {Awareness} */awareness.getStates();\n      added.forEach(id => {\n        updateCursor(quillCursors, states.get(id), id, doc, type);\n      });\n      updated.forEach(id => {\n        updateCursor(quillCursors, states.get(id), id, doc, type);\n      });\n      removed.forEach(id => {\n        quillCursors.removeCursor(id.toString());\n      });\n    };\n    /**\n     * @param {Y.YTextEvent} event\n     */\n    this._typeObserver = event => {\n      if (event.transaction.origin !== this) {\n        const eventDelta = event.delta;\n        // We always explicitly set attributes, otherwise concurrent edits may\n        // result in quill assuming that a text insertion shall inherit existing\n        // attributes.\n        const delta = [];\n        for (let i = 0; i < eventDelta.length; i++) {\n          const d = eventDelta[i];\n          if (d.insert !== undefined) {\n            delta.push(Object.assign({}, d, {\n              attributes: Object.assign({}, this._negatedUsedFormats, d.attributes || {})\n            }));\n          } else {\n            delta.push(d);\n          }\n        }\n        quill.updateContents(delta, this);\n      }\n    };\n    type.observe(this._typeObserver);\n    this._quillObserver = (eventType, delta, state, origin) => {\n      if (delta && delta.ops) {\n        // update content\n        const ops = delta.ops;\n        ops.forEach(op => {\n          if (op.attributes !== undefined) {\n            for (let key in op.attributes) {\n              if (this._negatedUsedFormats[key] === undefined) {\n                this._negatedUsedFormats[key] = false;\n              }\n            }\n          }\n        });\n        if (origin !== this) {\n          doc.transact(() => {\n            type.applyDelta(ops);\n          }, this);\n        }\n      }\n      // always check selection\n      if (awareness && quillCursors) {\n        const sel = quill.getSelection();\n        const aw = /** @type {any} */awareness.getLocalState();\n        if (sel === null) {\n          if (awareness.getLocalState() !== null) {\n            awareness.setLocalStateField('cursor', /** @type {any} */null);\n          }\n        } else {\n          const anchor = Y.createRelativePositionFromTypeIndex(type, sel.index);\n          const head = Y.createRelativePositionFromTypeIndex(type, sel.index + sel.length);\n          if (!aw || !aw.cursor || !Y.compareRelativePositions(anchor, aw.cursor.anchor) || !Y.compareRelativePositions(head, aw.cursor.head)) {\n            awareness.setLocalStateField('cursor', {\n              anchor,\n              head\n            });\n          }\n        }\n        // update all remote cursor locations\n        awareness.getStates().forEach((aw, clientId) => {\n          updateCursor(quillCursors, aw, clientId, doc, type);\n        });\n      }\n    };\n    quill.on('editor-change', this._quillObserver);\n    // This indirectly initializes _negatedUsedFormats.\n    // Make sure that this call this after the _quillObserver is set.\n    quill.setContents(type.toDelta(), this);\n    // init remote cursors\n    if (quillCursors !== null && awareness) {\n      awareness.getStates().forEach((aw, clientId) => {\n        updateCursor(quillCursors, aw, clientId, doc, type);\n      });\n      awareness.on('change', this._awarenessChange);\n    }\n  }\n  destroy() {\n    this.type.unobserve(this._typeObserver);\n    this.quill.off('editor-change', this._quillObserver);\n    if (this.awareness) {\n      this.awareness.off('change', this._awarenessChange);\n    }\n  }\n}","map":{"version":3,"names":["Y","Awareness","normQuillDelta","delta","length","d","insert","attributes","undefined","slice","ins","pop","updateCursor","quillCursors","aw","clientId","doc","type","cursor","clientID","user","color","name","createCursor","toString","anchor","createAbsolutePositionFromRelativePosition","createRelativePositionFromJSON","head","moveCursor","index","removeCursor","err","console","error","QuillBinding","constructor","quill","awareness","getModule","_negatedUsedFormats","_awarenessChange","added","removed","updated","states","getStates","forEach","id","get","_typeObserver","event","transaction","origin","eventDelta","i","push","Object","assign","updateContents","observe","_quillObserver","eventType","state","ops","op","key","transact","applyDelta","sel","getSelection","getLocalState","setLocalStateField","createRelativePositionFromTypeIndex","compareRelativePositions","on","setContents","toDelta","destroy","unobserve","off"],"sources":["/root/ms1/node_modules/y-quill/src/y-quill.js"],"sourcesContent":["/**\n * @module bindings/quill\n */\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport { Awareness } from 'y-protocols/awareness.js' // eslint-disable-line\n\n/**\n * Removes the pending '\\n's if it has no attributes.\n */\nexport const normQuillDelta = delta => {\n  if (delta.length > 0) {\n    const d = delta[delta.length - 1]\n    const insert = d.insert\n    if (d.attributes === undefined && insert !== undefined && insert.slice(-1) === '\\n') {\n      delta = delta.slice()\n      let ins = insert.slice(0, -1)\n      while (ins.slice(-1) === '\\n') {\n        ins = ins.slice(0, -1)\n      }\n      delta[delta.length - 1] = { insert: ins }\n      if (ins.length === 0) {\n        delta.pop()\n      }\n      return delta\n    }\n  }\n  return delta\n}\n\n/**\n * @param {any} quillCursors\n */\nconst updateCursor = (quillCursors, aw, clientId, doc, type) => {\n  try {\n    if (aw && aw.cursor && clientId !== doc.clientID) {\n      const user = aw.user || {}\n      const color = user.color || '#ffa500'\n      const name = user.name || `User: ${clientId}`\n      quillCursors.createCursor(clientId.toString(), name, color)\n      const anchor = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(aw.cursor.anchor), doc)\n      const head = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(aw.cursor.head), doc)\n      if (anchor && head && anchor.type === type) {\n        quillCursors.moveCursor(clientId.toString(), { index: anchor.index, length: head.index - anchor.index })\n      }\n    } else {\n      quillCursors.removeCursor(clientId.toString())\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport class QuillBinding {\n  /**\n   * @param {Y.Text} type\n   * @param {any} quill\n   * @param {Awareness} [awareness]\n   */\n  constructor (type, quill, awareness) {\n    const doc = /** @type {Y.Doc} */ (type.doc)\n    this.type = type\n    this.doc = doc\n    this.quill = quill\n    const quillCursors = quill.getModule('cursors') || null\n    this.quillCursors = quillCursors\n    // This object contains all attributes used in the quill instance\n    this._negatedUsedFormats = {}\n    this.awareness = awareness\n    this._awarenessChange = ({ added, removed, updated }) => {\n      const states = /** @type {Awareness} */ (awareness).getStates()\n      added.forEach(id => {\n        updateCursor(quillCursors, states.get(id), id, doc, type)\n      })\n      updated.forEach(id => {\n        updateCursor(quillCursors, states.get(id), id, doc, type)\n      })\n      removed.forEach(id => {\n        quillCursors.removeCursor(id.toString())\n      })\n    }\n    /**\n     * @param {Y.YTextEvent} event\n     */\n    this._typeObserver = event => {\n      if (event.transaction.origin !== this) {\n        const eventDelta = event.delta\n        // We always explicitly set attributes, otherwise concurrent edits may\n        // result in quill assuming that a text insertion shall inherit existing\n        // attributes.\n        const delta = []\n        for (let i = 0; i < eventDelta.length; i++) {\n          const d = eventDelta[i]\n          if (d.insert !== undefined) {\n            delta.push(Object.assign({}, d, { attributes: Object.assign({}, this._negatedUsedFormats, d.attributes || {}) }))\n          } else {\n            delta.push(d)\n          }\n        }\n        quill.updateContents(delta, this)\n      }\n    }\n    type.observe(this._typeObserver)\n    this._quillObserver = (eventType, delta, state, origin) => {\n      if (delta && delta.ops) {\n        // update content\n        const ops = delta.ops\n        ops.forEach(op => {\n          if (op.attributes !== undefined) {\n            for (let key in op.attributes) {\n              if (this._negatedUsedFormats[key] === undefined) {\n                this._negatedUsedFormats[key] = false\n              }\n            }\n          }\n        })\n        if (origin !== this) {\n          doc.transact(() => {\n            type.applyDelta(ops)\n          }, this)\n        }\n      }\n      // always check selection\n      if (awareness && quillCursors) {\n        const sel = quill.getSelection()\n        const aw = /** @type {any} */ (awareness.getLocalState())\n        if (sel === null) {\n          if (awareness.getLocalState() !== null) {\n            awareness.setLocalStateField('cursor', /** @type {any} */ (null))\n          }\n        } else {\n          const anchor = Y.createRelativePositionFromTypeIndex(type, sel.index)\n          const head = Y.createRelativePositionFromTypeIndex(type, sel.index + sel.length)\n          if (!aw || !aw.cursor || !Y.compareRelativePositions(anchor, aw.cursor.anchor) || !Y.compareRelativePositions(head, aw.cursor.head)) {\n            awareness.setLocalStateField('cursor', {\n              anchor,\n              head\n            })\n          }\n        }\n        // update all remote cursor locations\n        awareness.getStates().forEach((aw, clientId) => {\n          updateCursor(quillCursors, aw, clientId, doc, type)\n        })\n      }\n    }\n    quill.on('editor-change', this._quillObserver)\n    // This indirectly initializes _negatedUsedFormats.\n    // Make sure that this call this after the _quillObserver is set.\n    quill.setContents(type.toDelta(), this)\n    // init remote cursors\n    if (quillCursors !== null && awareness) {\n      awareness.getStates().forEach((aw, clientId) => {\n        updateCursor(quillCursors, aw, clientId, doc, type)\n      })\n      awareness.on('change', this._awarenessChange)\n    }\n  }\n  destroy () {\n    this.type.unobserve(this._typeObserver)\n    this.quill.off('editor-change', this._quillObserver)\n    if (this.awareness) {\n      this.awareness.off('change', this._awarenessChange)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}