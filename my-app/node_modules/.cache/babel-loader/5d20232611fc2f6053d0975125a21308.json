{"ast":null,"code":"var _jsxFileName = \"/root/ms1/my-app/src/Editor.js\",\n  _s = $RefreshSig$();\nimport * as Y from 'yjs';\nimport { QuillBinding } from 'y-quill';\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors';\nimport { useCallback } from 'react';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nQuill.register('modules/cursors', QuillCursors);\nfunction Editor(props) {\n  _s();\n  console.log('In editor');\n\n  //eventsource stuff in here\n  const events = new EventSource(`http://194.113.75.203:3001/api/connect/${props.docId}`);\n  console.log(events);\n  events.onmessage = event => {\n    console.log(\"one event\");\n    console.log(event.type);\n    if (event.type === 'sync') {\n      console.log(\"in sync\");\n      //add data to y doc\n    } else if (event.type === 'update') {\n      //update y doc\n    }\n    console.log(\"inside one event\");\n    console.log(event.data); //<- our data from the backend is here\n    //now gotta figure out how to tell the typee of event (sync or update)\n    //if sync add data to y doc obj\n    //if update update crdt obj (which in this case would b y doc)\n  };\n\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    const quill = new Quill(document.querySelector('#editor'), {\n      modules: {\n        cursors: true,\n        toolbar: [[{\n          header: [1, 2, 3, 4, 5, 6, false]\n        }], [{\n          font: []\n        }], [{\n          list: \"ordered\"\n        }, {\n          list: \"bullet\"\n        }], [\"bold\", \"italic\", \"underline\"], [{\n          color: []\n        }, {\n          background: []\n        }], [{\n          script: \"sub\"\n        }, {\n          script: \"super\"\n        }], [{\n          align: []\n        }], [\"image\", \"blockquote\", \"code-block\"], [\"clean\"]],\n        history: {\n          userOnly: true\n        }\n      },\n      placeholder: 'Start collaborating...',\n      theme: 'snow'\n    });\n    // A Yjs document holds the shared data\n    const ydoc = new Y.Doc();\n    // Define a shared text type on the document\n    const ytext = ydoc.getText('quill');\n\n    // Create an editor-binding which\n    // \"binds\" the quill editor to a Y.Text type.\n    const binding = new QuillBinding(ytext, quill);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_s(Editor, \"Ckff4P1tSXuKx/UN+CqhszMFSy0=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["Y","QuillBinding","Quill","QuillCursors","useCallback","register","Editor","props","console","log","events","EventSource","docId","onmessage","event","type","data","wrapperRef","wrapper","innerHTML","quill","document","querySelector","modules","cursors","toolbar","header","font","list","color","background","script","align","history","userOnly","placeholder","theme","ydoc","Doc","ytext","getText","binding"],"sources":["/root/ms1/my-app/src/Editor.js"],"sourcesContent":["import * as Y from 'yjs'\nimport { QuillBinding } from 'y-quill'\nimport Quill from 'quill'\nimport QuillCursors from 'quill-cursors'\nimport { useCallback } from 'react'\nimport \"./styles.css\"\n\nQuill.register('modules/cursors', QuillCursors);\n\nfunction Editor(props) {\n    console.log('In editor')\n    \n    \n    //eventsource stuff in here\n    const events = new EventSource(`http://194.113.75.203:3001/api/connect/${props.docId}`)\n    console.log(events)\n\n\n    events.onmessage = (event) => {\n        console.log(\"one event\")\n        console.log(event.type)\n        if (event.type === 'sync') {\n            console.log(\"in sync\");\n            //add data to y doc\n        } else if (event.type === 'update') {\n            //update y doc\n        }\n        console.log(\"inside one event\")\n        console.log(event.data); //<- our data from the backend is here\n        //now gotta figure out how to tell the typee of event (sync or update)\n        //if sync add data to y doc obj\n        //if update update crdt obj (which in this case would b y doc)\n\n    };\n\n\n    const wrapperRef = useCallback((wrapper) => {\n        if (wrapper == null) return\n        wrapper.innerHTML = \"\"\n        const quill = new Quill(document.querySelector('#editor'), {\n            modules: {\n                cursors: true,\n                toolbar: [\n                    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n                    [{ font: [] }],\n                    [{ list: \"ordered\" }, { list: \"bullet\" }],\n                    [\"bold\", \"italic\", \"underline\"],\n                    [{ color: [] }, { background: [] }],\n                    [{ script: \"sub\" }, { script: \"super\" }],\n                    [{ align: [] }],\n                    [\"image\", \"blockquote\", \"code-block\"],\n                    [\"clean\"],],\n                history: {\n                    userOnly: true\n                }\n            },\n            placeholder: 'Start collaborating...',\n            theme: 'snow'\n        })\n        // A Yjs document holds the shared data\n        const ydoc = new Y.Doc()\n        // Define a shared text type on the document\n        const ytext = ydoc.getText('quill')\n\n        // Create an editor-binding which\n        // \"binds\" the quill editor to a Y.Text type.\n        const binding = new QuillBinding(ytext, quill)\n    }, [])\n\n    return <div id='editor' className='container' ref={wrapperRef}></div>\n}\n\nexport default Editor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}