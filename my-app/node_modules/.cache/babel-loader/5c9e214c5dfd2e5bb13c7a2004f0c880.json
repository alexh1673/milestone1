{"ast":null,"code":"var _jsxFileName = \"/root/ms1/my-app/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import * as Y from 'yjs'\n// import { WebrtcProvider } from 'y-webrtc'\n// import { QuillBinding } from 'y-quill'\n// import Quill from 'quill'\n// import QuillCursors from 'quill-cursors'\n// import \"quill/dist/quill.snow.css\"\n\n// Quill.register('modules/cursors', QuillCursors)\n\n// const quill = new Quill(document.querySelector('#editor'), {\n//   modules: {\n//     cursors: true,\n//     toolbar: [\n//       // adding some basic Quill content features\n//       [{ header: [1, 2, false] }],\n//       ['bold', 'italic', 'underline'],\n//       ['image', 'code-block']\n//     ],\n//     history: {\n//       // Local undo shouldn't undo changes\n//       // from remote users\n//       userOnly: true\n//     }\n//   },\n//   placeholder: 'Start collaborating...',\n//   theme: 'snow' // 'bubble' is also great\n// })\n\n// // A Yjs document holds the shared data\n// const ydoc = new Y.Doc()\n\n// const provider = new WebrtcProvider('quill-demo-room', ydoc)\n\n// // Define a shared text type on the document\n// const ytext = ydoc.getText('quill')\n\n// // \"Bind\" the quill editor to a Yjs text type.\n// const binding = new QuillBinding(ytext, quill, provider.awareness)\n\n// // Remove the selection when the iframe is blurred\n// window.addEventListener('blur', () => { quill.blur() })\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"nice\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App"],"sources":["/root/ms1/my-app/src/App.js"],"sourcesContent":["// import * as Y from 'yjs'\n// import { WebrtcProvider } from 'y-webrtc'\n// import { QuillBinding } from 'y-quill'\n// import Quill from 'quill'\n// import QuillCursors from 'quill-cursors'\n// import \"quill/dist/quill.snow.css\"\n\n// Quill.register('modules/cursors', QuillCursors)\n\n// const quill = new Quill(document.querySelector('#editor'), {\n//   modules: {\n//     cursors: true,\n//     toolbar: [\n//       // adding some basic Quill content features\n//       [{ header: [1, 2, false] }],\n//       ['bold', 'italic', 'underline'],\n//       ['image', 'code-block']\n//     ],\n//     history: {\n//       // Local undo shouldn't undo changes\n//       // from remote users\n//       userOnly: true\n//     }\n//   },\n//   placeholder: 'Start collaborating...',\n//   theme: 'snow' // 'bubble' is also great\n// })\n\n// // A Yjs document holds the shared data\n// const ydoc = new Y.Doc()\n\n// const provider = new WebrtcProvider('quill-demo-room', ydoc)\n\n// // Define a shared text type on the document\n// const ytext = ydoc.getText('quill')\n\n// // \"Bind\" the quill editor to a Yjs text type.\n// const binding = new QuillBinding(ytext, quill, provider.awareness)\n\n// // Remove the selection when the iframe is blurred\n// window.addEventListener('blur', () => { quill.blur() })\n\nfunction App() {\n  return <div>nice</div>\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,SAASA,GAAG,GAAG;EACb,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAe;AACxB;AAAC,KAFQA,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}